[{"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Search.js":"1","/Users/augustoibarrola/Development/code/musicolor-picker/src/App.js":"2","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Track.js":"3","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Dropdown.js":"4","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchResults.js":"5","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/TrackBox.js":"6","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/TrackThumbnail.js":"7","/Users/augustoibarrola/Development/code/musicolor-picker/src/index.js":"8","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchedResults.js":"9","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchedTrack.js":"10"},{"size":1019,"mtime":1607478011505,"results":"11","hashOfConfig":"12"},{"size":9290,"mtime":1609199658906,"results":"13","hashOfConfig":"12"},{"size":2652,"mtime":1610142415162,"results":"14","hashOfConfig":"12"},{"size":561,"mtime":1607478702708,"results":"15","hashOfConfig":"12"},{"size":472,"mtime":1607642741728,"results":"16","hashOfConfig":"12"},{"size":951,"mtime":1608006365004,"results":"17","hashOfConfig":"12"},{"size":341,"mtime":1608004730513,"results":"18","hashOfConfig":"12"},{"size":421,"mtime":1606935641942,"results":"19","hashOfConfig":"12"},{"size":1466,"mtime":1608008030830,"results":"20","hashOfConfig":"12"},{"size":2645,"mtime":1608008490422,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"1p0yxtr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Search.js",["53"],"import React, { useState, useEffect } from 'react'\nimport { Input, Dropdown } from 'semantic-ui-react'\n\nconst Search = ({ searchTypeOptions, spotifySearch }) => {\n\n    const [searchType, setSearchType] = useState(searchTypeOptions[0][\"value\"])\n    const [value, setValue] = useState('')\n\n    const setSearchParam = (event) => {\n        setSearchType(event.target.innerText)\n    }\n\n    return(\n        <div>\n            <form onSubmit={ event => { \n                spotifySearch(event, value, searchType) \n                setValue('')\n                }}> \n                <Input \n                    as=\"submit\"\n                    label={<Dropdown defaultValue={searchType} options={searchTypeOptions} onChange={event => setSearchParam(event)} />}\n                    labelPosition='left'\n                    placeholder='search music'\n                    value={value}\n                    onChange={e => setValue(e.target.value)}\n                /> \n            </form>\n        </div>\n\n\n    )\n}\n\nexport default Search ","/Users/augustoibarrola/Development/code/musicolor-picker/src/App.js",["54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Container, Image, Grid, Divider, Header } from 'semantic-ui-react'\n\nimport Dropdown from './Components/Dropdown.js'\nimport TrackBox from './Components/TrackBox.js'\nimport Track from './Components/Track.js'\nimport Search from './Components/Search.js'\nimport SearchResults from './Components/SearchResults.js'\nimport SearchedResults from './Components/SearchedResults.js'\n\nconst App = () => {\n  \n  const [token, setToken] = useState('')\n  const [genre, setGenre] = useState({ selectedGenre: '', selectedGenreImg: '', listOfGenresFromAPI: []})\n  const [playlist, setPlaylist] = useState({ selectedPlaylist: '', selectedPlaylistImg: '', listOfPlaylistFromAPI: [] })\n  const [tracks, setTracks] = useState({ selectedTracks: '', listOfTracksFromAPI: []})\n  const [showTrack, setShowTrack] = useState(false)\n  const [selectedTrack, setSelectedTrack] = useState('')\n\n  const [searchType, setSearchType] = useState('')\n  const [searchedResults, setSearchedResults] = useState([])\n  const [searchedArtists, setSearchedArtists] = useState([])\n  const [searchedAlbums, setSearchedAlbums] = useState([])\n  const [selectedSearchedTrack, setSelectedSearchedTrack] = useState([])\n\n  const searchTypeOptions = [\n    { key: 'album', text: 'album', value: 'album' },\n    { key: 'artist', text: 'artist', value: 'artist' },\n    // { key: 'playlists', text: 'playlists', value: 'playlists' },\n  ]\n\n  useEffect(() => { \n    axios('https://accounts.spotify.com/api/token', {\n        headers: {\n          'Content-Type' : 'application/x-www-form-urlencoded',\n          'Authorization' : 'Basic ' + btoa(process.env.REACT_APP_CLIENT_ID + ':' + process.env.REACT_APP_CLIENT_SECRET)     \n        },\n        data: 'grant_type=client_credentials',\n        method: 'POST'\n      })\n    .then(tokenResponse => {\n      setToken(tokenResponse.data.access_token)\n\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US',{\n        method: 'GET', \n        headers: {\n          'Authorization' : 'Bearer ' + tokenResponse.data.access_token \n        },\n      })\n      .then(getSearchResponse => { \n        setGenre({\n          selectedGenre: getSearchResponse.data.categories.items[0].name,\n          selectedGenreImg: getSearchResponse.data.categories.items[0].icons[0].url,\n          listOfGenresFromAPI: getSearchResponse.data.categories.items\n        })\n        axios(`https://api.spotify.com/v1/browse/categories/${getSearchResponse.data.categories.items[0].id}/playlists`, {\n          method: 'GET',\n          headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n        })\n        .then(playlistResponse => {\n          setPlaylist({\n            selectedPlaylist: playlistResponse.data.playlists.items[0].name,\n            selectedPlaylistImg: playlistResponse.data.playlists.items[0].images[0].url,\n            listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n          })\n          axios(`https:api.spotify.com/v1/playlists/${playlistResponse.data.playlists.items[0].id}/tracks?limit=15`, {\n            method: 'GET',\n            headers: {\n              'Authorization' : 'Bearer ' + tokenResponse.data.access_token, \n              'Content-Type' : 'application/json',\n              'Accept' : 'application/json'\n            }\n          })\n          .then(tracksResponse => {\n            setTracks({\n              selectedTracks: tracks.selectedTracks, \n              listOfTracksFromAPI: tracksResponse.data.items\n            })\n          })   \n        })\n      })\n    })\n  }, [])\n\n  const genreChanged = (value) => {\n    let genreImg = genre.listOfGenresFromAPI.filter(g => g.id == value )\n    \n    setGenre({\n      selectedGenre: value, \n      selectedGenreImg: genreImg[0].icons[0].url, \n      listOfGenresFromAPI: genre.listOfGenresFromAPI\n    });\n\n    axios(`https://api.spotify.com/v1/browse/categories/${value}/playlists`, {\n      method: 'GET',\n      headers: { 'Authorization' : 'Bearer ' + token}\n    })\n    .then(playlistResponse => {\n      setPlaylist({\n        selectedPlaylist: playlistResponse.data.playlists.items[0].name,\n        selectedPlaylistImg: playlistResponse.data.playlists.items[0].images[0].url,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n      })\n    })\n\n  }\n\n  const playlistChanged = (value) => {\n\n    let playlistImg = playlist.listOfPlaylistFromAPI.filter(p => p.id == value)\n    \n    setPlaylist({\n      selectedPlaylist: value, \n      selectedPlaylistImg: playlistImg[0].images[0].url,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    })\n\n\n    axios(`https://api.spotify.com/v1/playlists/${value}/tracks?limit=15`, {\n      method: 'GET',\n      headers: {\n        'Authorization' : 'Bearer ' + token, \n        'Content-Type' : 'application/json',\n        'Accept' : 'application/json'\n      }\n    })\n    .then(tracksResponse => {\n      setTracks({\n        selectedTracks: tracks.selectedTracks, \n        listOfTracksFromAPI: tracksResponse.data.items\n      })\n    })\n\n  }\n\n  const trackBoxClicked = (value) => {\n    console.log(value)\n    console.log(tracks.listOfTracksFromAPI.filter(t => t.track.id == value))\n\n    const track = tracks.listOfTracksFromAPI.filter(t => t.track.id == value)\n    setSelectedTrack(track)\n    setShowTrack(true)\n\n  }\n\n  const searchedTrackClicked = (name) => {\n\n    const track = searchedResults.filter(t => t.name == name)\n    setSelectedSearchedTrack(track)\n    // setShowTrack(true)\n  }\n\n  const postFavorite = (album) => {\n\n    fetch('http://localhost:3000/tracks', {\n      method: 'POST', \n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json'\n      }, \n      body: JSON.stringify({\n        track_name: album.name, \n        track_artist: album.albumArtist, \n        track_album: album.name\n      })\n    })\n    .then(response => response.json())      \n    .then(console.log)\n\n  }\n\n  const spotifySearch = (event, value, searchType) => {\n    event.preventDefault()\n\n    axios(`\thttps://api.spotify.com/v1/search?q=${value}&type=${searchType}&limit=5`, {\n      method: 'GET', \n      headers: { \n        'Authorization' : 'Bearer ' + token, \n        'Content-Type' : 'application/json',\n        'Accept' : 'application/json'\n      }\n    })\n    .then(response => {\n      console.log(response)\n      // if (searchType == 'artist') {\n      //   console.log(\" artist  => \", response.data.artists.items)\n      //   // setSearchType('artists')\n      //   setSearchedResults(response.data.artists.items)\n      //   // setSearchedArtists(response.data.artists.items)\n      //   // setTracks({\n      //   //   selectedTracks: tracks.selectedTracks, \n      //   //   listOfTracksFromAPI: response.data.artists.items\n      //   // })\n        \n      // } else {\n      //   console.log(\" album  => \", response.data.albums.items)\n      //   // setSearchType('albums')\n      //   setSearchedResults(response.data.albums.items)\n      //   // setSearchedAlbums(response.data.albums.items)\n      //   // setTracks({\n      //   //   selectedTracks: tracks.selectedTracks, \n      //   //   listOfTracksFromAPI: response.data.albums.items\n      //   // })\n      // }\n    })\n  }\n\n\n\n  return(\n    <div> \n      <Container>\n        <Grid divided='vertically' style={{ padding: '20px', minWidth: 'max-content' }}>\n          <Grid.Row>\n\n            <Search searchTypeOptions={searchTypeOptions} spotifySearch={spotifySearch} />\n\n            { !searchedResults == [] ? <SearchedResults  items={searchedResults} clicked={searchedTrackClicked} selectedTrack={selectedSearchedTrack} postFavorite={postFavorite}/>   : null }\n{/* \n            { selectedTrack ? <Track selectedTrack={selectedTrack} postFavorite={postFavorite}/> : null } */}\n          \n          </Grid.Row>\n\n          <Grid.Row columns={2} style={{ }}>\n            \n            <Grid.Column style={{\n              display: 'flex',\n              flexDirection:  'column',\n              alignItems: 'baseline',\n              justifyContent:' space-around',\n              height: '770px',\n              maxWidth: '400px'\n              }}>\n\n              <div>\n                <Header size=\"huge\"> Genre </Header>\n                { genre ?  <Image src={genre.selectedGenreImg} size=\"medium\" rounded /> : null }\n              </div>\n\n              <Dropdown options={genre.listOfGenresFromAPI} selectedValue={ genre.selectedGenre } changed={genreChanged} selectedGenreImg={genre.selectedGenreImg} selection/>\n              \n              <div> \n                <Header size=\"huge\"> Playlist </Header>\n                <Image src={playlist.selectedPlaylistImg} size=\"medium\" rounded />\n              </div>\n\n              <Dropdown options={playlist.listOfPlaylistFromAPI} selectedValue={playlist.selectedPlaylist} selectedGenreImg={playlist.selectedPlaylistImg} changed={playlistChanged}  selection/>\n              \n            </Grid.Column> \n\n            <Grid.Column style={{padding: '35px', paddingLeft: '95px'}}> \n\n              <TrackBox  items={tracks.listOfTracksFromAPI} clicked={trackBoxClicked} selectedTrack={selectedTrack} postFavorite={postFavorite}/>\n            \n            </Grid.Column>\n\n          </Grid.Row>\n\n        </Grid> \n\n      </Container>\n    </div>\n\n  )\n}\n\nexport default App ",["72","73"],"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Track.js",["74"],"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Dropdown.js",["75","76","77"],"import React, { useState } from 'react'\nimport { Dropdown as SDropdown, Image } from 'semantic-ui-react'\n\nconst Dropdown =  ( props ) => {\n\n    const dropdownChanged = (event) => {\n       props.changed(event.target.value)\n    }\n    \n    return(\n\n        <div>\n                <select value={props.selectedValue} onChange={(event) => dropdownChanged(event) }>\n                    { props.options.map( (item, index) => <option key={ index } value={ item.id } >{ item.name }</option>   ) }\n                </select>\n        </div>\n    )\n\n}\n\nexport default Dropdown","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchResults.js",["78","79","80"],"import React, { useEffect, useState } from 'react'\nimport { Image } from 'semantic-ui-react'\nimport TrackThumbnail from './TrackThumbnail'\n\nconst SearchResults = ({ searchResults, searchType }) => {\n    // console.log(searchResults)\n    // console.log(searchType)\n\n\n    return(\n        <div>\n            <Image.Group >\n                {\n                    \n                } \n            </Image.Group>  \n            \n        </div>\n    )\n\n}\n\nexport default SearchResults","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/TrackBox.js",["81","82"],"import React, { useState, useEffect } from 'react'\nimport { Image } from 'semantic-ui-react'\nimport Track from './Track.js'\nimport TrackThumbnail from './TrackThumbnail.js'\n\nconst TrackBox = (props) => {\n    // console.log(props)\n\n\n    const clicked = (event) => {\n        \n    event.preventDefault()\n    props.clicked(event.target.id)\n    }\n    \n  return(\n\n    <div>\n        <div> \n            <Image.Group style={{ width: '900px' }}>\n                {\n                    props.items.map((item, index) => {\n                        return <TrackThumbnail index={ index } key={ item.track.id } id={ item.track.id } name={item.track.name} clicked={ clicked } image={item.track.album.images[1].url} />\n                    })\n                }\n            </Image.Group>  \n        </div>\n\n        {props.selectedTrack ? <Track selectedTrack={props.selectedTrack} postFavorite={props.postFavorite}/> : null }\n\n    </div>\n\n    )\n\n}\n\nexport default TrackBox","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/TrackThumbnail.js",["83","84"],"import React, { useState, useEffect } from 'react'\nimport { Image } from 'semantic-ui-react'\n\nconst TrackThumbnail = ({index, id, name, clicked, image}) => {\n    return(\n        <Image src={image} index={index} id={id} name={name} size='small' rounded onClick={event => { clicked(event) } }></Image>\n    )\n}   \n\nexport default TrackThumbnail","/Users/augustoibarrola/Development/code/musicolor-picker/src/index.js",["85","86"],"// import 'bootstrap/dist/css/bootstrap.min.css'\nimport $ from 'jquery';\nimport Popper from 'popper.js';\n// import 'bootstrap/dist/js/bootstrap.bundle.min'\nimport 'semantic-ui-css/semantic.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n  ",["87","88"],"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchedResults.js",["89","90","91","92"],"import React, { useState, useEffect } from 'react'\nimport { Image } from 'semantic-ui-react'\nimport Track from './Track.js'\nimport TrackThumbnail from './TrackThumbnail.js'\nimport SearchedTrack from './SearchedTrack.js'\n\nconst SearchedResults = ( props ) => {\n    console.log(props)\n    \n    const [showTrack, setShowTrack] = useState(false)\n\n     if(!props.items == []) {\n         for(const item of props.items) {\n            if (item.images[1].url === undefined ){\n                props.items.splice(props.item.index, 1)\n            } \n         }\n     }\n\n     const clicked = (event) => {\n         console.log(event.target.id)\n        event.preventDefault()\n        props.clicked(event.target.name)\n        setShowTrack(true)\n    }\n    \n    return(\n\n        <div>\n            <div> \n                <Image.Group style={{ width: '900px' }}>\n                    {\n                        props.items.map((item, index) => {\n                            if ( item.images[1].url !== []) {\n                                return <TrackThumbnail index={ index } key={ item.id } id={ item.id } name={item.name} clicked={ clicked } image={item.images[1].url} />\n                            } \n                        })\n                    }\n                </Image.Group>  \n            </div>\n\n            {showTrack ? <SearchedTrack selectedTrack={props.selectedTrack} postFavorite={props.postFavorite}/> : null } \n\n        </div>\n\n    )\n\n}\n\nexport default SearchedResults","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchedTrack.js",["93"],"import React, {useState, useEffect} from 'react'\nimport { Icon, Grid, Header } from 'semantic-ui-react'\nimport { ColorExtractor } from 'react-color-extractor'\n\nconst SearchedTrack = ({selectedTrack, postFavorite}) => {\n\n\n    console.log(selectedTrack)\n    console.log(postFavorite)\n\n    const [album, setAlbum] = useState({\n        name: selectedTrack[0].track.album.name,\n        albumArtist: selectedTrack[0].track.artists[0].name, \n        image: selectedTrack[0].track.album.images[0].url,\n        albumId: selectedTrack[0].track.album.id,\n        releaseDate: selectedTrack[0].track.album.release_date\n    })\n\n    const [albumColors, setAlbumColors] = useState([])\n\n\n    useEffect(() => {\n        setAlbum({\n        name: selectedTrack[0].track.album.name, \n        albumArtist: selectedTrack[0].track.artists[0].name, \n        image: selectedTrack[0].track.album.images[0].url,\n        albumId: selectedTrack[0].track.album.id,\n        releaseDate: selectedTrack[0].track.album.release_date\n        })\n    }, [selectedTrack])\n\n    const renderColors = () => {\n        const colors = albumColors \n\n        return colors.map( ( color, id ) => {\n        return  <div key={id} style={{backgroundColor: color, width: '100px', height: '100px'}}></div> \n        } )\n    }\n\n    const getColors = colors => {\n        setAlbumColors(colors)\n    }\n\n\n\n    return( \n        <div>\n            <Grid divided='vertically' style={{ width: '130%' }} >\n\n                <Grid.Row columns={2} style={{display: 'flex', flexDirection: 'row-reverse', paddingTop: '40px'}}>\n\n                    <Grid.Column style={{paddingLeft: '93px'}}>\n\n                        <img className=\"img\" src={album.image}  style={{ maxHeight:'275px', maxWidth: '275px' }} ></img>\n\n                    </Grid.Column>\n\n                    <Grid.Column >\n                        <div>\n                            <Header size=\"large\">{album.name}</Header>\n                            <Header size=\"medium\"> by <em>{album.albumArtist}</em> </Header>\n                            <Icon name=\"heart\" onClick={() => postFavorite(album)}></Icon>\n                        </div>\n\n                        <div> \n                            <ColorExtractor getColors={colors => {getColors(colors)}} src={album.image} />\n                            <div style={ { marginTop: '20px', display: 'flex', justifyContent: 'center' } }>\n                                {renderColors()}\n                            </div>\n                        </div>\n\n                    </Grid.Column>\n\n                </Grid.Row>\n            \n            </Grid>\n        </div>\n    )\n\n}\n\nexport default SearchedTrack",{"ruleId":"94","severity":1,"message":"95","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"98","line":3,"column":34,"nodeType":"96","messageId":"97","endLine":3,"endColumn":41},{"ruleId":"94","severity":1,"message":"99","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":13},{"ruleId":"94","severity":1,"message":"100","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":21},{"ruleId":"94","severity":1,"message":"101","line":18,"column":10,"nodeType":"96","messageId":"97","endLine":18,"endColumn":19},{"ruleId":"94","severity":1,"message":"102","line":21,"column":10,"nodeType":"96","messageId":"97","endLine":21,"endColumn":20},{"ruleId":"94","severity":1,"message":"103","line":21,"column":22,"nodeType":"96","messageId":"97","endLine":21,"endColumn":35},{"ruleId":"94","severity":1,"message":"104","line":22,"column":27,"nodeType":"96","messageId":"97","endLine":22,"endColumn":45},{"ruleId":"94","severity":1,"message":"105","line":23,"column":10,"nodeType":"96","messageId":"97","endLine":23,"endColumn":25},{"ruleId":"94","severity":1,"message":"106","line":23,"column":27,"nodeType":"96","messageId":"97","endLine":23,"endColumn":45},{"ruleId":"94","severity":1,"message":"107","line":24,"column":10,"nodeType":"96","messageId":"97","endLine":24,"endColumn":24},{"ruleId":"94","severity":1,"message":"108","line":24,"column":26,"nodeType":"96","messageId":"97","endLine":24,"endColumn":43},{"ruleId":"109","severity":1,"message":"110","line":84,"column":6,"nodeType":"111","endLine":84,"endColumn":8,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":87,"column":63,"nodeType":"115","messageId":"116","endLine":87,"endColumn":65},{"ruleId":"113","severity":1,"message":"114","line":111,"column":71,"nodeType":"115","messageId":"116","endLine":111,"endColumn":73},{"ruleId":"113","severity":1,"message":"114","line":139,"column":67,"nodeType":"115","messageId":"116","endLine":139,"endColumn":69},{"ruleId":"113","severity":1,"message":"114","line":141,"column":69,"nodeType":"115","messageId":"116","endLine":141,"endColumn":71},{"ruleId":"113","severity":1,"message":"114","line":149,"column":54,"nodeType":"115","messageId":"116","endLine":149,"endColumn":56},{"ruleId":"113","severity":1,"message":"114","line":219,"column":32,"nodeType":"115","messageId":"116","endLine":219,"endColumn":34},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":52,"column":25,"nodeType":"123","endLine":52,"endColumn":115},{"ruleId":"94","severity":1,"message":"124","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"125","line":2,"column":22,"nodeType":"96","messageId":"97","endLine":2,"endColumn":31},{"ruleId":"94","severity":1,"message":"126","line":2,"column":33,"nodeType":"96","messageId":"97","endLine":2,"endColumn":38},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"124","line":1,"column":28,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"127","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":22},{"ruleId":"94","severity":1,"message":"124","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"124","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"128","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":9},{"ruleId":"94","severity":1,"message":"129","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":14},{"ruleId":"117","replacedBy":"130"},{"ruleId":"119","replacedBy":"131"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"99","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":12,"column":22,"nodeType":"115","messageId":"116","endLine":12,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":33,"column":55,"nodeType":"134","messageId":"135","endLine":33,"endColumn":57},{"ruleId":"121","severity":1,"message":"122","line":54,"column":25,"nodeType":"123","endLine":54,"endColumn":115},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'Track' is defined but never used.","'SearchResults' is defined but never used.","'showTrack' is assigned a value but never used.","'searchType' is assigned a value but never used.","'setSearchType' is assigned a value but never used.","'setSearchedResults' is assigned a value but never used.","'searchedArtists' is assigned a value but never used.","'setSearchedArtists' is assigned a value but never used.","'searchedAlbums' is assigned a value but never used.","'setSearchedAlbums' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tracks.selectedTracks'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTracks' needs the current value of 'tracks.selectedTracks'.","ArrayExpression",["136"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["137"],"no-negated-in-lhs",["138"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'SDropdown' is defined but never used.","'Image' is defined but never used.","'TrackThumbnail' is defined but never used.","'$' is defined but never used.","'Popper' is defined but never used.",["137"],["138"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"139","fix":"140"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [tracks.selectedTracks]",{"range":"141","text":"142"},[3583,3585],"[tracks.selectedTracks]"]