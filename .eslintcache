[{"/Users/augustoibarrola/Development/code/musicolor-picker/src/App.js":"1","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Track.js":"2","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Dropdown.js":"3","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchResults.js":"4","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/TrackBox.js":"5","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/TrackThumbnail.js":"6","/Users/augustoibarrola/Development/code/musicolor-picker/src/index.js":"7","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchedResults.js":"8","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchedTrack.js":"9"},{"size":7932,"mtime":1613764375718,"results":"10","hashOfConfig":"11"},{"size":1649,"mtime":1613771936507,"results":"12","hashOfConfig":"11"},{"size":526,"mtime":1613703239794,"results":"13","hashOfConfig":"11"},{"size":472,"mtime":1607642741728,"results":"14","hashOfConfig":"11"},{"size":1045,"mtime":1613771783824,"results":"15","hashOfConfig":"11"},{"size":376,"mtime":1613701721369,"results":"16","hashOfConfig":"11"},{"size":421,"mtime":1613702637832,"results":"17","hashOfConfig":"11"},{"size":971,"mtime":1610254230667,"results":"18","hashOfConfig":"11"},{"size":2710,"mtime":1610254365562,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1p0yxtr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/augustoibarrola/Development/code/musicolor-picker/src/App.js",["41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport Dropdown from './Components/Dropdown.js'\nimport TrackBox from './Components/TrackBox.js'\nimport Track from './Components/Track.js'\n\nimport SearchResults from './Components/SearchResults.js'\nimport SearchedResults from './Components/SearchedResults.js'\n\nconst App = () => {\n  \n  const [token, setToken] = useState('')\n  const [genre, setGenre] = useState({ selectedGenre: '', selectedGenreImg: '', listOfGenresFromAPI: []})\n  const [playlist, setPlaylist] = useState({ selectedPlaylist: '', selectedPlaylistImg: '', listOfPlaylistFromAPI: [] })\n  const [tracks, setTracks] = useState({ selectedTracks: '', listOfTracksFromAPI: []})\n  const [showTrack, setShowTrack] = useState(false)\n  const [selectedTrack, setSelectedTrack] = useState('')\n\n  const [searchType, setSearchType] = useState('')\n  const [searchedResults, setSearchedResults] = useState([])\n  const [searchedArtists, setSearchedArtists] = useState([])\n  const [searchedAlbums, setSearchedAlbums] = useState([])\n  const [selectedSearchedTrack, setSelectedSearchedTrack] = useState([])\n\n  const searchTypeOptions = [\n    { key: 'album', text: 'album', value: 'album' },\n    { key: 'artist', text: 'artist', value: 'artist' },\n  ]\n\n  useEffect(() => { \n    axios('https://accounts.spotify.com/api/token', {\n        headers: {\n          'Content-Type' : 'application/x-www-form-urlencoded',\n          'Authorization' : 'Basic ' + btoa(process.env.REACT_APP_CLIENT_ID + ':' + process.env.REACT_APP_CLIENT_SECRET)     \n        },\n        data: 'grant_type=client_credentials',\n        method: 'POST'\n      })\n    .then(tokenResponse => {\n      setToken(tokenResponse.data.access_token)\n\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US',{\n        method: 'GET', \n        headers: {\n          'Authorization' : 'Bearer ' + tokenResponse.data.access_token \n        },\n      })\n      .then(getSearchResponse => { \n        setGenre({\n          selectedGenre: getSearchResponse.data.categories.items[0].name,\n          selectedGenreImg: getSearchResponse.data.categories.items[0].icons[0].url,\n          listOfGenresFromAPI: getSearchResponse.data.categories.items\n        })\n        axios(`https://api.spotify.com/v1/browse/categories/${getSearchResponse.data.categories.items[0].id}/playlists`, {\n          method: 'GET',\n          headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\n        })\n        .then(playlistResponse => {\n          setPlaylist({\n            selectedPlaylist: playlistResponse.data.playlists.items[0].name,\n            selectedPlaylistImg: playlistResponse.data.playlists.items[0].images[0].url,\n            listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n          })\n          axios(`https:api.spotify.com/v1/playlists/${playlistResponse.data.playlists.items[0].id}/tracks?limit=15`, {\n            method: 'GET',\n            headers: {\n              'Authorization' : 'Bearer ' + tokenResponse.data.access_token, \n              'Content-Type' : 'application/json',\n              'Accept' : 'application/json'\n            }\n          })\n          .then(tracksResponse => {\n            setTracks({\n              selectedTracks: tracks.selectedTracks, \n              listOfTracksFromAPI: tracksResponse.data.items\n            })\n          })   \n        })\n      })\n    })\n  }, [])\n\n  useEffect(()=> {\n    // console.log(\"something was searched!\")\n  }, [searchedResults])\n\n  useEffect(()=> {\n    // console.log(\"ARTISTS were searched!\")\n  }, [searchedArtists])\n\n  useEffect(()=> {\n    // console.log(\"ALBUMS were searched!\")\n  }, [searchedAlbums])\n\n  const genreChanged = (value) => {\n    let genreImg = genre.listOfGenresFromAPI.filter(g => g.id == value )\n    \n    setGenre({\n      selectedGenre: value, \n      selectedGenreImg: genreImg[0].icons[0].url, \n      listOfGenresFromAPI: genre.listOfGenresFromAPI\n    });\n\n    axios(`https://api.spotify.com/v1/browse/categories/${value}/playlists`, {\n      method: 'GET',\n      headers: { 'Authorization' : 'Bearer ' + token}\n    })\n    .then(playlistResponse => {\n      setPlaylist({\n        selectedPlaylist: playlistResponse.data.playlists.items[0].name,\n        selectedPlaylistImg: playlistResponse.data.playlists.items[0].images[0].url,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n      })\n    })\n\n  }\n\n  const playlistChanged = (value) => {\n    let playlistImg = playlist.listOfPlaylistFromAPI.filter(p => p.id == value)\n    \n    setPlaylist({\n      selectedPlaylist: value, \n      selectedPlaylistImg: playlistImg[0].images[0].url,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    })\n\n\n    axios(`https://api.spotify.com/v1/playlists/${value}/tracks?limit=15`, {\n      method: 'GET',\n      headers: {\n        'Authorization' : 'Bearer ' + token, \n        'Content-Type' : 'application/json',\n        'Accept' : 'application/json'\n      }\n    })\n    .then(tracksResponse => {\n      setTracks({\n        selectedTracks: tracks.selectedTracks, \n        listOfTracksFromAPI: tracksResponse.data.items\n      })\n    })\n  }\n\n  const trackBoxClicked = (value) => {\n    const track = tracks.listOfTracksFromAPI.filter(t => t.track.id == value)\n    setSelectedTrack(track)\n    setShowTrack(true)\n  }\n\n  const searchedTrackClicked = (name, image) => {\n  }\n\n  const postFavorite = (album) => {\n    fetch('http://localhost:3000/tracks', {\n      method: 'POST', \n      headers: {\n        'content-type': 'application/json',\n        'accepts': 'application/json'\n      }, \n      body: JSON.stringify({\n        track_name: album.name, \n        track_artist: album.albumArtist, \n        track_album: album.name\n      })\n    })\n    .then(response => response.json())      \n    .then(console.log)\n  }\n\n  const spotifySearch = (event, value, searchType) => {\n    event.preventDefault()\n    if(searchType == 'artist'){\n      axios(`\thttps://api.spotify.com/v1/search?q=${value}&type=${searchType}&limit=5`, {\n        method: 'GET', \n        headers: { \n          'Authorization' : 'Bearer ' + token, \n          'Content-Type' : 'application/json',\n          'Accept' : 'application/json'\n        }\n      })\n      .then(response => {\n        console.log(\" ARTIST SEARCH => \", response)\n        setSearchedResults(response.data.artists.items)\n        setSearchedArtists(response.data.artists.items)\n      })\n    }else if(searchType == 'album'){\n      axios(`\thttps://api.spotify.com/v1/search?q=${value}&type=${searchType}&limit=5`, {\n        method: 'GET', \n        headers: { \n          'Authorization' : 'Bearer ' + token, \n          'Content-Type' : 'application/json',\n          'Accept' : 'application/json'\n        }\n      })\n      .then(response => {\n        console.log(\" ALBUM SEARCH => \", response)\n        setSearchedResults(response.data.albums.items)\n        setSearchedAlbums(response.data.albums.items)\n      })\n    }\n  }\n\n  return(\n    <div className=\"main-container\"> \n      <div className=\"main-container-rows\">\n        <div>\n          <h1> Genre </h1>\n          { genre ?  <img className=\"album-cover\" src={genre.selectedGenreImg} /> : null }\n          <Dropdown options={genre.listOfGenresFromAPI} selectedValue={ genre.selectedGenre } changed={genreChanged} selectedGenreImg={genre.selectedGenreImg} selection/>\n        </div>\n        \n        <div> \n          <h1> Playlist </h1>\n          <img className=\"album-cover\" src={playlist.selectedPlaylistImg}/>\n          <Dropdown options={playlist.listOfPlaylistFromAPI} selectedValue={playlist.selectedPlaylist} selectedGenreImg={playlist.selectedPlaylistImg} changed={playlistChanged}  selection/>        \n        </div>\n\n      </div>\n\n      <div className=\"main-container-rows\">\n        <TrackBox  items={tracks.listOfTracksFromAPI} clicked={trackBoxClicked} selectedTrack={selectedTrack} postFavorite={postFavorite}/>\n      </div>\n\n    </div>\n  )\n}\n\nexport default App ","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Track.js",["60","61","62","63"],"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/Dropdown.js",["64"],"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchResults.js",["65","66","67"],"import React, { useEffect, useState } from 'react'\nimport { Image } from 'semantic-ui-react'\nimport TrackThumbnail from './TrackThumbnail'\n\nconst SearchResults = ({ searchResults, searchType }) => {\n    // console.log(searchResults)\n    // console.log(searchType)\n\n\n    return(\n        <div>\n            <Image.Group >\n                {\n                    \n                } \n            </Image.Group>  \n            \n        </div>\n    )\n\n}\n\nexport default SearchResults","/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/TrackBox.js",["68","69"],"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/TrackThumbnail.js",["70","71"],"/Users/augustoibarrola/Development/code/musicolor-picker/src/index.js",["72","73"],"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchedResults.js",["74","75","76","77","78"],"/Users/augustoibarrola/Development/code/musicolor-picker/src/Components/SearchedTrack.js",["79"],"import React, {useState, useEffect} from 'react'\nimport { Icon, Grid, Header } from 'semantic-ui-react'\nimport { ColorExtractor } from 'react-color-extractor'\n\nconst SearchedTrack = ({selectedTrack, postFavorite}) => {\n\n\n    console.log(selectedTrack)\n    console.log(postFavorite)\n\n    const [album, setAlbum] = useState({\n        name: selectedTrack[0].track.album.name,\n        albumArtist: selectedTrack[0].track.artists[0].name, \n        image: selectedTrack[0].track.album.images[0].url,\n        albumId: selectedTrack[0].track.album.id,\n        releaseDate: selectedTrack[0].track.album.release_date\n    })\n\n    const [albumColors, setAlbumColors] = useState([])\n\n\n    useEffect(() => {\n        setAlbum({\n        name: selectedTrack[0].track.album.name, \n        albumArtist: selectedTrack[0].track.artists[0].name, \n        image: selectedTrack[0].track.album.images[0].url,\n        albumId: selectedTrack[0].track.album.id,\n        releaseDate: selectedTrack[0].track.album.release_date\n        })\n    }, [selectedTrack])\n\n    const renderColors = () => {\n        const colors = albumColors \n\n        return colors.map( ( color, id ) => {\n            // console.log(color)\n            // console.log(id)\n        return  <div key={id} style={{backgroundColor: color, width: '100px', height: '100px'}}></div> \n        } )\n    }\n\n    const getColors = colors => {\n        setAlbumColors(colors)\n    }\n\n\n\n    return( \n        <div>\n            <Grid divided='vertically' style={{ width: '130%' }} >\n\n                <Grid.Row columns={2} style={{display: 'flex', flexDirection: 'row-reverse', paddingTop: '40px'}}>\n\n                    <Grid.Column style={{paddingLeft: '93px'}}>\n\n                        <img className=\"img\" src={album.image}  style={{ maxHeight:'275px', maxWidth: '275px' }} ></img>\n\n                    </Grid.Column>\n\n                    <Grid.Column >\n                        <div>\n                            <Header size=\"large\">{album.name}</Header>\n                            <Header size=\"medium\"> by <em>{album.albumArtist}</em> </Header>\n                            <Icon name=\"heart\" onClick={() => postFavorite(album)}></Icon>\n                        </div>\n\n                        <div> \n                            <ColorExtractor getColors={colors => {getColors(colors)}} src={album.image} />\n                            <div style={ { marginTop: '20px', display: 'flex', justifyContent: 'center' } }>\n                                {renderColors()}\n                            </div>\n                        </div>\n\n                    </Grid.Column>\n\n                </Grid.Row>\n            \n            </Grid>\n        </div>\n    )\n\n}\n\nexport default SearchedTrack",{"ruleId":"80","severity":1,"message":"81","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":13},{"ruleId":"80","severity":1,"message":"84","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":21},{"ruleId":"80","severity":1,"message":"85","line":9,"column":8,"nodeType":"82","messageId":"83","endLine":9,"endColumn":23},{"ruleId":"80","severity":1,"message":"86","line":17,"column":10,"nodeType":"82","messageId":"83","endLine":17,"endColumn":19},{"ruleId":"80","severity":1,"message":"87","line":20,"column":10,"nodeType":"82","messageId":"83","endLine":20,"endColumn":20},{"ruleId":"80","severity":1,"message":"88","line":20,"column":22,"nodeType":"82","messageId":"83","endLine":20,"endColumn":35},{"ruleId":"80","severity":1,"message":"89","line":24,"column":10,"nodeType":"82","messageId":"83","endLine":24,"endColumn":31},{"ruleId":"80","severity":1,"message":"90","line":24,"column":33,"nodeType":"82","messageId":"83","endLine":24,"endColumn":57},{"ruleId":"80","severity":1,"message":"91","line":26,"column":9,"nodeType":"82","messageId":"83","endLine":26,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":82,"column":6,"nodeType":"94","endLine":82,"endColumn":8,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":97,"column":63,"nodeType":"98","messageId":"99","endLine":97,"endColumn":65},{"ruleId":"96","severity":1,"message":"97","line":120,"column":71,"nodeType":"98","messageId":"99","endLine":120,"endColumn":73},{"ruleId":"96","severity":1,"message":"97","line":146,"column":69,"nodeType":"98","messageId":"99","endLine":146,"endColumn":71},{"ruleId":"80","severity":1,"message":"100","line":151,"column":9,"nodeType":"82","messageId":"83","endLine":151,"endColumn":29},{"ruleId":"80","severity":1,"message":"101","line":171,"column":9,"nodeType":"82","messageId":"83","endLine":171,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":173,"column":19,"nodeType":"98","messageId":"99","endLine":173,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":187,"column":25,"nodeType":"98","messageId":"99","endLine":187,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":209,"column":22,"nodeType":"104","endLine":209,"endColumn":82},{"ruleId":"102","severity":1,"message":"103","line":215,"column":11,"nodeType":"104","endLine":215,"endColumn":76},{"ruleId":"80","severity":1,"message":"105","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"106","line":2,"column":16,"nodeType":"82","messageId":"83","endLine":2,"endColumn":20},{"ruleId":"80","severity":1,"message":"107","line":2,"column":22,"nodeType":"82","messageId":"83","endLine":2,"endColumn":28},{"ruleId":"102","severity":1,"message":"103","line":35,"column":13,"nodeType":"104","endLine":35,"endColumn":103},{"ruleId":"80","severity":1,"message":"108","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"109","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"108","line":1,"column":28,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"110","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":22},{"ruleId":"80","severity":1,"message":"108","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"109","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"108","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"109","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"111","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":9},{"ruleId":"80","severity":1,"message":"112","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":14},{"ruleId":"80","severity":1,"message":"108","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"109","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":13},{"ruleId":"80","severity":1,"message":"113","line":5,"column":8,"nodeType":"82","messageId":"83","endLine":5,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":17,"column":49,"nodeType":"116","messageId":"117","endLine":17,"endColumn":51},{"ruleId":"102","severity":1,"message":"103","line":56,"column":25,"nodeType":"104","endLine":56,"endColumn":115},"no-unused-vars","'Track' is defined but never used.","Identifier","unusedVar","'SearchResults' is defined but never used.","'SearchedResults' is defined but never used.","'showTrack' is assigned a value but never used.","'searchType' is assigned a value but never used.","'setSearchType' is assigned a value but never used.","'selectedSearchedTrack' is assigned a value but never used.","'setSelectedSearchedTrack' is assigned a value but never used.","'searchTypeOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tracks.selectedTracks'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTracks' needs the current value of 'tracks.selectedTracks'.","ArrayExpression",["118"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'searchedTrackClicked' is assigned a value but never used.","'spotifySearch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Icon' is defined but never used.","'Grid' is defined but never used.","'Header' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'TrackThumbnail' is defined but never used.","'$' is defined but never used.","'Popper' is defined but never used.","'SearchedTrack' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"119","fix":"120"},"Update the dependencies array to be: [tracks.selectedTracks]",{"range":"121","text":"122"},[3396,3398],"[tracks.selectedTracks]"]